# automatically generated by the FlatBuffers compiler, do not modify

# namespace: OgTeam1PA1

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class VeggiesTable(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = VeggiesTable()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsVeggiesTable(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # VeggiesTable
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # VeggiesTable
    def Tomato(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # VeggiesTable
    def Cucumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # VeggiesTable
    def Potato(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # VeggiesTable
    def Carrot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def VeggiesTableStart(builder):
    builder.StartObject(4)

def Start(builder):
    VeggiesTableStart(builder)

def VeggiesTableAddTomato(builder, tomato):
    builder.PrependFloat32Slot(0, tomato, 0.0)

def AddTomato(builder, tomato):
    VeggiesTableAddTomato(builder, tomato)

def VeggiesTableAddCucumber(builder, cucumber):
    builder.PrependFloat32Slot(1, cucumber, 0.0)

def AddCucumber(builder, cucumber):
    VeggiesTableAddCucumber(builder, cucumber)

def VeggiesTableAddPotato(builder, potato):
    builder.PrependFloat32Slot(2, potato, 0.0)

def AddPotato(builder, potato):
    VeggiesTableAddPotato(builder, potato)

def VeggiesTableAddCarrot(builder, carrot):
    builder.PrependFloat32Slot(3, carrot, 0.0)

def AddCarrot(builder, carrot):
    VeggiesTableAddCarrot(builder, carrot)

def VeggiesTableEnd(builder):
    return builder.EndObject()

def End(builder):
    return VeggiesTableEnd(builder)
